namespace: monk-wordpress

db:
  inherits: mysql/latest
  containers:
    mysql:
      image: mysql:8.0
      paths:
        - <- `${db-data-path}:/var/lib/mysql`
      ports:
        - 3306
  variables:
    wordpress-db-user:
      env: MYSQL_USER
      type: string
      value: "db_user"
    wordpress-db-password:
      env: MYSQL_PASSWORD
      type: string
      value: "RhgDPXPEnAgJ5q5g"
    wordpress-db-name:
      env: MYSQL_DATABASE
      type: string
      value: "wpdb"
    mysql-root-password:
      env: MYSQL_ROOT_PASSWORD
      type: string
      value: "RhgDPXPEnAgJ5q5g"
    db-data-path:
      type: string
      value: <- `${monk-volume-path}/mysql/db`
  checks:
    readiness:
      code: "true"
      period: 15
      initialDelay: 10

web:
  defines: runnable
  containers:
    wordpress:
      image: docker.io/wordpress
      paths:
        - <- `${wordpress-data-path}:/var/www/html`                                     
      ports:
        - 8089:80
        - 443
  depends:
    wait-for:
      runnables:
        - monk-wordpress/db
      timeout: 30
  variables:
    wordpress-db-user:
      env: WORDPRESS_DB_USER
      type: string
      value: "value"
    wordpress-db-password:
      env: WORDPRESS_DB_PASSWORD
      type: string
      value: "value"
    wordpress-db-name:
      env: WORDPRESS_DB_NAME
      type: string
    wordpress-db-host:
      env: WORDPRESS_DB_HOST
      type: string
      value: <- get-hostname("wordpress/db", "mysql")
    wordpress-data-path:
      type: string
      value: <- `${monk-volume-path}/wordpress/web`