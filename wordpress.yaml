namespace: monk-wordpress

db:
  defines: runnable
  inherits: mysql/latest
  containers:
    mysql:
      image: mysql:8.0
      environment:
        - <- `MYSQL_ROOT_PASSWORD=${mysql-root-password}`
        - <- `MYSQL_USER=${wordpress-db-user}`
        - <- `MYSQL_PASSWORD=${wordpress-db-password}`
        - <- `MYSQL_DATABASE=${wordpress-db-name}`
      paths:
        - <- `${db-data-path}:/var/lib/mysql`
      ports:
        - 3306
  variables:
    wordpress-db-user:
      type: string
      value: "db_user"
    wordpress-db-password:
      type: string
      value: "RhgDPXPEnAgJ5q5g"
    wordpress-db-name:
      type: string
      value: "wpdb"
    mysql-root-password:
      type: string
      value: "RhgDPXPEnAgJ5q5g"
    db-data-path:
      type: string
      value: <- `${monk-volume-path}/mysql/db`
  checks:
    readiness:
      code: "true"
      period: 15
      initialDelay: 10

web:
  defines: runnable
  containers:
    wordpress:
      image: docker.io/wordpress
      environment:
        - <- `WORDPRESS_DB_HOST=${wordpress-db-host}`
        - <- `WORDPRESS_DB_PASSWORD=${wordpress-db-password}`
        - <- `WORDPRESS_DB_NAME=${wordpress-db-name}`
        - <- `WORDPRESS_DB_USER=${wordpress-db-user}`
      paths:
        - <- `${wordpress-data-path}:/var/www/html`                                     
      ports:
        - 80
        - 443
  depends:
    wait-for:
      runnables:
        - monk-wordpress/db
      timeout: 30
  variables:
    wordpress-db-user:
      type: string
    wordpress-db-password:
      type: string
    wordpress-db-name:
      type: string
    wordpress-db-host:
      type: string
      value: <- get-hostname("wordpress/db", "mysql")
    wordpress-data-path:
      type: string
      value: <- `${monk-volume-path}/wordpress/web`

stack:
  defines: process-group
  runnable-list:
    - monk-wordpress/db
    - monk-wordpress/web
  variables:
    wordpress-db-user: "db_user"
    wordpress-db-password: "RhgDPXPEnAgJ5q5g"
    wordpress-db-name: "wpdb"
